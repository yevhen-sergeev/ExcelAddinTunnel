{"version":3,"file":"functions.js","mappings":"yBA0CAA,gBAAgBC,UAAU,OAlCnB,SAAoBC,GAGzB,OAFAC,QAAQC,IAAIF,GAELA,CACT,IA+BAF,gBAAgBC,UAAU,gBAvBnB,SAAsBI,GAG3B,GAFAF,QAAQC,IAAI,oBAAqBC,GAE7BA,EAAI,IAAMC,OAAOC,UAAUF,GAE7B,MADAF,QAAQK,MAAM,mDACR,IAAIC,MAAM,yCAMlB,IAHA,IAAMC,EAAqB,GACvBC,EAAY,EAEPC,EAAI,EAAGA,GAAKP,EAAGO,IACtBD,GAAaC,GAAK,EAClBF,EAAOG,KAAK,CAACF,IACbR,QAAQC,IAAI,aAADU,OAAcF,EAAC,OAAAE,OAAMH,IAIlC,OADAR,QAAQC,IAAI,aAAcM,GACnBA,CACT,G","sources":["webpack://excel-custom-functions/./src/functions/functions.ts"],"sourcesContent":["/* global clearInterval, console, CustomFunctions, setInterval */\r\n\r\n/**\r\n * Writes a message to console.log().\r\n * @customfunction LOG\r\n * @param message String to write.\r\n * @returns String to write.\r\n */\r\nexport function logMessage(message: string): string {\r\n  console.log(message);\r\n\r\n  return message;\r\n}\r\n\r\n/**\r\n * Возвращает ряд факториалов от 0 до n.\r\n * @customfunction FACTORIALROW\r\n * @param {number} n Число, до которого считать факториалы\r\n * @returns {number[][]} Ряд факториалов от 0 до n (в виде вертикального массива)\r\n */\r\nexport function factorialRow(n: number): number[][] {\r\n  console.log(\"Входное значение:\", n);\r\n\r\n  if (n < 0 || !Number.isInteger(n)) {\r\n    console.error(\"Ошибка: введено отрицательное или нецелое число\");\r\n    throw new Error(\"Input must be a non-negative integer.\");\r\n  }\r\n\r\n  const result: number[][] = [];\r\n  let factorial = 1;\r\n\r\n  for (let i = 0; i <= n; i++) {\r\n    factorial *= i || 1;\r\n    result.push([factorial]);\r\n    console.log(`Факториал ${i} = ${factorial}`);\r\n  }\r\n\r\n  console.log(\"Результат:\", result);\r\n  return result;\r\n}\r\n\r\n\nCustomFunctions.associate(\"LOG\", logMessage);\nCustomFunctions.associate(\"FACTORIALROW\", factorialRow);"],"names":["CustomFunctions","associate","message","console","log","n","Number","isInteger","error","Error","result","factorial","i","push","concat"],"sourceRoot":""}