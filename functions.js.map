{"version":3,"file":"functions.js","mappings":"yBACA,IAAIA,EAAsB,CAAC,ECOpB,SAASC,EAAWC,GAGzB,OAFAC,QAAQC,IAAIF,GAELA,CACT,CAQO,SAASG,EAAaC,GAG3B,GAFAH,QAAQC,IAAI,oBAAqBE,GAE7BA,EAAI,IAAMC,OAAOC,UAAUF,GAE7B,MADAH,QAAQM,MAAM,mDACR,IAAIC,MAAM,yCAMlB,IAHA,IAAMC,EAAqB,GACvBC,EAAY,EAEPC,EAAI,EAAGA,GAAKP,EAAGO,IACtBD,GAAaC,GAAK,EAClBF,EAAOG,KAAK,CAACF,IACbT,QAAQC,IAAI,aAADW,OAAcF,EAAC,OAAAE,OAAMH,IAIlC,OADAT,QAAQC,IAAI,aAAcO,GACnBA,CACT,CCtCAX,EAAoBgB,EAAI,SAASC,EAASC,GACzC,IAAI,IAAIC,KAAOD,EACXlB,EAAoBoB,EAAEF,EAAYC,KAASnB,EAAoBoB,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAG3E,ECPAnB,EAAoBoB,EAAI,SAASK,EAAKC,GAAQ,OAAOL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,EAAO,EF0CtGI,gBAAgBC,UAAU,MAAO9B,GACjC6B,gBAAgBC,UAAU,eAAgB1B,GAE1CyB,gBAAgBC,UAAU,MAAO9B,GACjC6B,gBAAgBC,UAAU,eAAgB1B,E","sources":["webpack://excel-custom-functions/webpack/bootstrap","webpack://excel-custom-functions/./src/functions/functions.ts","webpack://excel-custom-functions/webpack/runtime/define property getters","webpack://excel-custom-functions/webpack/runtime/hasOwnProperty shorthand"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","/* global clearInterval, console, CustomFunctions, setInterval */\r\n\r\n/**\r\n * Writes a message to console.log().\r\n * @customfunction LOG\r\n * @param message String to write.\r\n * @returns String to write.\r\n */\r\nexport function logMessage(message: string): string {\r\n  console.log(message);\r\n\r\n  return message;\r\n}\r\n\r\n/**\r\n * Возвращает ряд факториалов от 0 до n.\r\n * @customfunction FACTORIALROW\r\n * @param {number} n Число, до которого считать факториалы\r\n * @returns {number[][]} Ряд факториалов от 0 до n (в виде вертикального массива)\r\n */\r\nexport function factorialRow(n: number): number[][] {\r\n  console.log(\"Входное значение:\", n);\r\n\r\n  if (n < 0 || !Number.isInteger(n)) {\r\n    console.error(\"Ошибка: введено отрицательное или нецелое число\");\r\n    throw new Error(\"Input must be a non-negative integer.\");\r\n  }\r\n\r\n  const result: number[][] = [];\r\n  let factorial = 1;\r\n\r\n  for (let i = 0; i <= n; i++) {\r\n    factorial *= i || 1;\r\n    result.push([factorial]);\r\n    console.log(`Факториал ${i} = ${factorial}`);\r\n  }\r\n\r\n  console.log(\"Результат:\", result);\r\n  return result;\r\n}\r\n\r\n// Добавляем ассоциацию функций с Excel:\r\nCustomFunctions.associate(\"LOG\", logMessage);\r\nCustomFunctions.associate(\"FACTORIALROW\", factorialRow);\r\n\nCustomFunctions.associate(\"LOG\", logMessage);\nCustomFunctions.associate(\"FACTORIALROW\", factorialRow);","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }"],"names":["__webpack_require__","logMessage","message","console","log","factorialRow","n","Number","isInteger","error","Error","result","factorial","i","push","concat","d","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","CustomFunctions","associate"],"sourceRoot":""}