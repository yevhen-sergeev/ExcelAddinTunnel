{"version":3,"file":"functions.js","mappings":"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","sources":["webpack://excel-custom-functions/webpack/bootstrap","webpack://excel-custom-functions/webpack/runtime/define property getters","webpack://excel-custom-functions/webpack/runtime/hasOwnProperty shorthand","webpack://excel-custom-functions/webpack/runtime/make namespace object","webpack://excel-custom-functions/./src/functions/functions.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const FACTORIAL_CACHE: Map<string, string[][]> = new Map();\r\n\r\n/**\r\n * Return row of factorial from 0 to n.\r\n * @customfunction FACTORIALROW\r\n * @param {number} n\r\n * @returns {string[][]}\r\n */\r\nfunction factorialRow(n: number): string[][] {\r\n    console.log(\"Enter value:\", n);\r\n\r\n    if (n < 0 || !Number.isInteger(n)) {\r\n        throw new Error(\"Input must be a non-negative integer.\");\r\n    }\r\n    else if (n > 500) {\r\n        throw new Error(\"Input must be less then 500.\");\r\n    }\r\n\r\n    const lOrientationMode: string | null = localStorage.getItem(\"orientationMode\");\r\n    // Create key from n and mode\r\n    const lCacheKey = `${n}_${lOrientationMode}`;\r\n    let lResult: string[][];\r\n\r\n    console.log(\"OrientationMode in factorialRow from storage:\", lOrientationMode);\r\n\r\n    // Return calculated result from cache\r\n    if (FACTORIAL_CACHE.has(lCacheKey)) {\r\n        lResult = FACTORIAL_CACHE.get(lCacheKey)!;\r\n        console.log(\"Result from FACTORIAL_CACHE:\", lResult);\r\n    }\r\n    else {\r\n        const lResultArray: string[] = [];\r\n        let lFactorial: bigint = BigInt(1);\r\n\r\n        for (let i = 1; i <= n; i++) {\r\n            lFactorial *= BigInt(i);\r\n            lResultArray.push(lFactorial.toString());\r\n        }\r\n\r\n        if (lOrientationMode === \"row\") {\r\n            lResult = [lResultArray];\r\n        }\r\n        else {\r\n            lResult = lResultArray.map(val => [val]);\r\n        }\r\n\r\n        FACTORIAL_CACHE.set(lCacheKey, lResult);\r\n\r\n        console.log(\"Calculated result:\", lResult);\r\n    }\r\n\r\n    return lResult;\r\n}\r\n\r\n/*\r\n * Return row of factorial from 0 to n.\r\n * @customfunction FACTORIALROW_WORKER\r\n * @param {number} n\r\n * @returns {Promise<string[][]>}\r\n */\r\nexport async function factorialRowWorker(n: number): Promise<string[][]> {\r\n  console.log(\"FACTORIALROW called with n =\", n);\r\n\r\n  const lOrientationMode = localStorage.getItem(\"orientationMode\");\r\n  console.log(\"OrientationMode in factorialRowWorker from storage:\", lOrientationMode);\r\n\r\n  return new Promise((resolve, reject) => {\r\n    const lIsLocalhost = window.location.hostname === \"localhost\";\r\n    const lWorker = new Worker(\r\n        lIsLocalhost\r\n            ? \"/factorialWorker.js?cachebust=\" + Date.now() //localhost\r\n            : \"https://yevhen-sergeev.github.io/ExcelAddinTunnel/factorialWorker.js\" // production\r\n    );\r\n\r\n    lWorker.onmessage = (event) => {\r\n      if (event.data.error) {\r\n        reject(event.data.error);\r\n      }\r\n      else {\r\n        resolve(event.data.result);\r\n      }\r\n          lWorker.terminate();\r\n    };\r\n\r\n    lWorker.onerror = (error) => {\r\n      reject(error.message);\r\n          lWorker.terminate();\r\n    };\r\n\r\n    lWorker.postMessage({n, lOrientationMode}); // Send `n` in Web Worker\r\n  });\r\n}\nCustomFunctions.associate(\"FACTORIALROW\", factorialRow);"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","e","t","r","n","iterator","i","c","Generator","u","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","done","return","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","configurable","writable","_invoke","asyncGeneratorStep","Promise","resolve","then","FACTORIAL_CACHE","Map","factorialRowWorker","_x","_factorialRowWorker","apply","arguments","_callee","lOrientationMode","_context","console","log","localStorage","getItem","reject","lIsLocalhost","window","location","hostname","lWorker","Worker","Date","now","onmessage","event","data","error","result","terminate","onerror","message","postMessage","_next","_throw","CustomFunctions","associate","Number","isInteger","Error","lResult","lCacheKey","concat","has","lResultArray","lFactorial","BigInt","push","toString","map","val","set"],"sourceRoot":""}