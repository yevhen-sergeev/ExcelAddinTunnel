const factorialCache=new Map;console.log("FACTORIAL WORKER LOADED!!!"),self.onmessage=async function(e){const{n:o,mode:s="row"}=e.data;if(console.log("Web Worker: входное значение",o),o<0||!Number.isInteger(o))return void postMessage({error:"Число должно быть неотрицательным целым."});if(o>500)return void postMessage({error:"Число должно быть меньше 500."});const t=`${o}_${s}`;if(factorialCache.has(t)){const e=factorialCache.get(t);console.log("Web Worker: результат из кэша",t),postMessage({result:e})}else{const e=[];let r=BigInt(1);for(let s=1;s<=o;s++)r*=BigInt(s),e.push(r.toString());const a="row"===s?[e]:e.map((e=>[e]));factorialCache.set(t,a),console.log("Web Worker: вычисленный результат",t),postMessage({result:a})}};